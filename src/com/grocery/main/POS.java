/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.grocery.main;

import com.grocery.db.DB;
import com.grocery.db.comman.InvoiceItemRow;
import com.grocery.db.comman.SystemConfigData;
import com.grocery.db.comman.SystemVariableList;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Set;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Gayani
 */
public class POS extends javax.swing.JInternalFrame {

    /**
     * Creates new form Category
     */
    double cost_price, cost_price_total, oneiteamprice;
    HashMap<String, Double> hash_map = new HashMap<String, Double>();

    public POS() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI b1 = (BasicInternalFrameUI) this.getUI();
        b1.setNorthPane(null);
        genetateInvoiceID();
        idSearch();
        txt_cusid.setText("CUS1");
        txt_custype.setText("Cash Customer");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txt_productcode = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txt_subtotal = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txt_netbalance = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txt_discount = new javax.swing.JTextField();
        txt_payment = new javax.swing.JTextField();
        txt_balance = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_productcode1 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txt_invoiceid = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        txt_available = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txt_unitprice = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txt_qty = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txt_itemname = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txt_cusid = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txt_custype = new javax.swing.JTextField();
        stock_iteamid = new javax.swing.JComboBox<>();
        btn_delete = new javax.swing.JButton();
        btn_delete1 = new javax.swing.JButton();
        btn_payinvoice = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1650, 910));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel8.setText("POS");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 136, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel9.setText("Green Grocers");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 267, -1));

        txt_productcode.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 14))); // NOI18N
        txt_productcode.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel20.setText("Sub Total");
        txt_productcode.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 101, 34));

        txt_subtotal.setEditable(false);
        txt_subtotal.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_subtotal.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_subtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_subtotalActionPerformed(evt);
            }
        });
        txt_subtotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_subtotalKeyPressed(evt);
            }
        });
        txt_productcode.add(txt_subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 140, 34));

        jLabel24.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel24.setText("Net Total");
        txt_productcode.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 101, 33));

        txt_netbalance.setEditable(false);
        txt_netbalance.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_netbalance.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_netbalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_netbalanceActionPerformed(evt);
            }
        });
        txt_netbalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_netbalanceKeyPressed(evt);
            }
        });
        txt_productcode.add(txt_netbalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 140, 40));

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel16.setText("Discount");
        txt_productcode.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 101, 33));

        jLabel26.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel26.setText("Payment");
        txt_productcode.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 101, 33));

        txt_discount.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_discount.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_discountActionPerformed(evt);
            }
        });
        txt_discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_discountKeyPressed(evt);
            }
        });
        txt_productcode.add(txt_discount, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 110, 35));

        txt_payment.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_payment.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_payment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_paymentActionPerformed(evt);
            }
        });
        txt_payment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_paymentKeyPressed(evt);
            }
        });
        txt_productcode.add(txt_payment, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 110, 30));

        txt_balance.setEditable(false);
        txt_balance.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_balance.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_balanceActionPerformed(evt);
            }
        });
        txt_balance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_balanceKeyPressed(evt);
            }
        });
        txt_productcode.add(txt_balance, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, 150, 70));

        jLabel25.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel25.setText("Balance");
        txt_productcode.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 101, 30));

        jTable1.setFont(new java.awt.Font("Century Gothic", 1, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Unit Price", "Quantity", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txt_productcode1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 14))); // NOI18N
        txt_productcode1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel28.setText("Item ID");
        txt_productcode1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 101, 33));

        jLabel29.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel29.setText("Invoice ID");
        txt_productcode1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 101, 34));

        txt_invoiceid.setEditable(false);
        txt_invoiceid.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_invoiceid.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_invoiceid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_invoiceidActionPerformed(evt);
            }
        });
        txt_invoiceid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_invoiceidKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_invoiceid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 100, 34));

        jLabel30.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel30.setText("Total");
        txt_productcode1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 81, 40));

        txt_total.setEditable(false);
        txt_total.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_total.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_totalActionPerformed(evt);
            }
        });
        txt_total.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_totalKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 90, 35));

        txt_available.setEditable(false);
        txt_available.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_available.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_available.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_availableActionPerformed(evt);
            }
        });
        txt_available.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_availableKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_available, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, 230, 35));

        jLabel32.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel32.setText("Unit Price");
        txt_productcode1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, -1, 34));

        txt_unitprice.setEditable(false);
        txt_unitprice.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_unitprice.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_unitprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_unitpriceActionPerformed(evt);
            }
        });
        txt_unitprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_unitpriceKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_unitprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 100, 230, 35));

        jLabel33.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel33.setText("Qty");
        txt_productcode1.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 101, 33));

        txt_qty.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_qty.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_qtyActionPerformed(evt);
            }
        });
        txt_qty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_qtyKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 100, 35));

        jLabel34.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel34.setText("Item Name");
        txt_productcode1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 101, 45));

        txt_itemname.setEditable(false);
        txt_itemname.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_itemname.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_itemname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_itemnameActionPerformed(evt);
            }
        });
        txt_itemname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_itemnameKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_itemname, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, 90, 35));

        jLabel35.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel35.setText("Available Qty");
        txt_productcode1.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, -1, 34));

        txt_cusid.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_cusid.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_cusid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cusidActionPerformed(evt);
            }
        });
        txt_cusid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cusidKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_cusid, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 90, 34));

        jLabel31.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel31.setText("Customer ID");
        txt_productcode1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, 34));

        jLabel36.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel36.setText("Customer Type");
        txt_productcode1.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, -1, 34));

        txt_custype.setEditable(false);
        txt_custype.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        txt_custype.setPreferredSize(new java.awt.Dimension(111, 23));
        txt_custype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_custypeActionPerformed(evt);
            }
        });
        txt_custype.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_custypeKeyPressed(evt);
            }
        });
        txt_productcode1.add(txt_custype, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 230, 34));

        stock_iteamid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item ID", "Stock ID", "Supplier ID" }));
        stock_iteamid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stock_iteamidActionPerformed(evt);
            }
        });
        txt_productcode1.add(stock_iteamid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 100, 40));

        btn_delete.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/grocery/images/erase_delete_remove_wipe_out-512.png"))); // NOI18N
        btn_delete.setText("Delete All");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_delete1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btn_delete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/grocery/images/delete-5123.png"))); // NOI18N
        btn_delete1.setText("Delete");
        btn_delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete1ActionPerformed(evt);
            }
        });

        btn_payinvoice.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btn_payinvoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/grocery/images/1024px-Card_Terminal_POS_Flat_Icon_Vector.svg.png"))); // NOI18N
        btn_payinvoice.setText("Pay Invoice");
        btn_payinvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_payinvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_productcode, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_delete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_payinvoice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_delete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(663, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txt_productcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 1454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 166, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_productcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btn_delete1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_productcode, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(btn_payinvoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(247, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 1620, 750));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1000, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked


    }//GEN-LAST:event_jTable1MouseClicked

    private void txt_invoiceidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_invoiceidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_invoiceidActionPerformed

    private void txt_invoiceidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_invoiceidKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_invoiceidKeyPressed

    private void txt_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalActionPerformed

    private void txt_totalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_totalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_totalKeyPressed

    private void txt_availableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_availableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_availableActionPerformed

    private void txt_availableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_availableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_availableKeyPressed

    private void txt_unitpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_unitpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_unitpriceActionPerformed

    private void txt_unitpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_unitpriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_unitpriceKeyPressed

    private void txt_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_qtyActionPerformed

        try {

            double unitprice = Double.parseDouble(txt_unitprice.getText().trim());
            double stockqty = Double.parseDouble(txt_available.getText().trim());
            double buying_price = Double.parseDouble(txt_unitprice.getText().trim());

            if (!txt_unitprice.getText().trim().equals("")) {

                int buyingqty = Integer.parseInt(txt_qty.getText().trim());

                if (stockqty >= buyingqty) {

                    txt_total.setText("" + (unitprice * buyingqty));

                    cost_price_total = cost_price_total + (cost_price * buyingqty);

                    oneiteamprice = cost_price * buyingqty;

                    double total = Double.parseDouble(txt_total.getText().trim());
                    DB.push("update stock set qty = qty - '" + buyingqty + "' where item_id = '" + stock_iteamid.getSelectedItem().toString() + "'");
                    DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                    Vector v = new Vector();
                    v.add(stock_iteamid.getSelectedItem().toString());
                    String userid = stock_iteamid.getSelectedItem().toString();
                    v.add(txt_itemname.getText());
                    v.add(txt_unitprice.getText());

                    InvoiceItemRow checkRowRepeating = checkRowRepeating(stock_iteamid.getSelectedItem().toString());

                    if (checkRowRepeating != null) {

                        total += checkRowRepeating.getTotal();
                        buyingqty += checkRowRepeating.getQty();

                    }

                    Set keys = hash_map.keySet();
                    Iterator i = keys.iterator();

                    while (i.hasNext()) {

                        String keyhashmap = i.next().toString();

                        if (userid == keyhashmap) {

                            double oldcost_price = hash_map.get(keyhashmap);
                            System.out.println(oldcost_price);
                            oneiteamprice = oneiteamprice + oldcost_price;
                            hash_map.put(keyhashmap, oneiteamprice);

                        }

                    }

                    hash_map.put(stock_iteamid.getSelectedItem().toString(), oneiteamprice);

                    v.add(buyingqty);
                    v.add(total);
                    dtm.addRow(v);
                    clear();
                    calculateTotal();
                    stock_iteamid.setEnabled(true);
                    System.out.println(hash_map);
                    System.out.println(cost_price_total);
                    oneiteamprice = 0;

                } else {
                    JOptionPane.showMessageDialog(this, "Quantity Exceed to \n Stock Quantity", "Alert", JOptionPane.WARNING_MESSAGE);
                    txt_qty.setText(txt_available.getText());
                    txt_qty.grabFocus();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_txt_qtyActionPerformed

    private void txt_qtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_qtyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_qtyKeyPressed

    private void txt_itemnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_itemnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_itemnameActionPerformed

    private void txt_itemnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_itemnameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_itemnameKeyPressed

    private void btn_payinvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_payinvoiceActionPerformed

        try {
            Date d = new Date();
            SimpleDateFormat date1 = new SimpleDateFormat("yyyy-MM-dd");

            DB.push("insert into invoice values('"
                    + txt_invoiceid.getText() + "','" + txt_cusid.getText()
                    + "','" + txt_custype.getText()
                    + "','" + date1.format(d) + "','"
                    + txt_subtotal.getText() + "','"
                    + cost_price_total + "','"
                    + txt_discount.getText() + "','"
                    + txt_netbalance.getText() + "','"
                    + txt_payment.getText() + "','"
                    + txt_balance.getText() + "','"
                    + SystemConfigData.getEmpid() + "')");

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            for (int row = 0; row < dtm.getRowCount(); row++) {

                String itemid = dtm.getValueAt(row, 0).toString().trim();
                String itemname = dtm.getValueAt(row, 1).toString().trim();
                String uprice = dtm.getValueAt(row, 2).toString().trim();
                String qty = dtm.getValueAt(row, 3).toString().trim();
                String total = dtm.getValueAt(row, 4).toString().trim();

                DB.push("insert into invoice_item (invoice_id,product_id,item_name,unit_price,qty,item_total)values('"
                        + txt_invoiceid.getText() + "','"
                        + itemid + "','"
                        + itemname + "','"
                        + uprice + "','"
                        + qty + "','"
                        + total + "')");

            }

            JOptionPane.showMessageDialog(this, "Invoiced saved", "POS", JOptionPane.INFORMATION_MESSAGE);
            posreport();
            createNewInvoice();
            cost_price_total=0;

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btn_payinvoiceActionPerformed

    private void txt_discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_discountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_discountKeyPressed

    private void txt_discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_discountActionPerformed

        double subtot = Double.parseDouble(txt_subtotal.getText());
        double itemdiscount = Double.parseDouble(txt_discount.getText());
        double subtotal = subtot * (100 - itemdiscount) / 100;
        txt_netbalance.setText("" + subtotal);


    }//GEN-LAST:event_txt_discountActionPerformed

    private void txt_netbalanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_netbalanceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_netbalanceKeyPressed

    private void txt_netbalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_netbalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_netbalanceActionPerformed

    private void txt_subtotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_subtotalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_subtotalKeyPressed

    private void txt_subtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_subtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_subtotalActionPerformed

    private void txt_paymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_paymentActionPerformed

        double net = Double.parseDouble(txt_netbalance.getText());
        double pay = Double.parseDouble(txt_payment.getText());

        if (txt_payment.getText() != null && !txt_payment.getText().trim().equals("")) {

            if (pay >= net) {
                txt_balance.setText("" + (pay - net));
                txt_balance.grabFocus();
            } else {
                JOptionPane.showMessageDialog(this, "Payment is not enough");
                txt_payment.setText("");
                txt_payment.grabFocus();
            }
        }


    }//GEN-LAST:event_txt_paymentActionPerformed

    private void txt_paymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paymentKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_paymentKeyPressed

    private void txt_balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_balanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_balanceActionPerformed

    private void txt_balanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_balanceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_balanceKeyPressed

    private void txt_cusidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cusidActionPerformed
        try {
            ResultSet rs = DB.search("select * from customer where cus_id = '" + txt_cusid.getText() + "'");
            if (rs.next()) {
                boolean status = rs.getBoolean("cus_status");
                if (status) {
                    txt_custype.setText(rs.getString("cus_type"));
                    txt_payment.setEditable(true);

                } else {
                    JOptionPane.showMessageDialog(this, "customer is not active");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_cusidActionPerformed

    private void txt_cusidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cusidKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cusidKeyPressed

    private void txt_custypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_custypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_custypeActionPerformed

    private void txt_custypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_custypeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_custypeKeyPressed

    private void btn_delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete1ActionPerformed
        try {

            int select = jTable1.getSelectedRow();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int iteam = Integer.parseInt(dtm.getValueAt(select, 0).toString().trim());
            int buyingqty = Integer.parseInt(dtm.getValueAt(select, 3).toString().trim());

            double buying_total = Double.parseDouble(dtm.getValueAt(select, 4).toString().trim());
            double buying_subtotal = Double.parseDouble(txt_subtotal.getText().toString().trim());
            txt_subtotal.setText("" + (buying_subtotal - buying_total));

            DB.push("update stock set qty = qty + '" + buyingqty + "' where item_id = '" + iteam + "'");
            dtm.removeRow(select);

            cost_price_total = cost_price_total - hash_map.get(String.valueOf(iteam));
            hash_map.remove(String.valueOf(iteam));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, String.valueOf(ex), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_delete1ActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:

        try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();

            for (int row = 0; row < dtm.getRowCount(); row++) {

                String itemid = dtm.getValueAt(row, 0).toString().trim();
                String buyingqty = dtm.getValueAt(row, 3).toString().trim();
                DB.push("update stock set qty = qty + '" + buyingqty + "' where item_id = '" + itemid + "'");

            }

            dtm.setRowCount(0);
            txt_subtotal.setText(null);
            cost_price_total = 0;
            hash_map.clear();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, String.valueOf(ex), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void stock_iteamidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stock_iteamidActionPerformed
        // TODO add your handling code here:
        try {
            ResultSet rs = DB.search("select * from stock where item_id = '" + stock_iteamid.getSelectedItem().toString() + "' and status = '1'");
            if (rs.next()) {

                txt_itemname.setText(rs.getString("item_name"));
                txt_available.setText(rs.getString("qty"));
                txt_unitprice.setText(rs.getString("selling_price"));
                cost_price = rs.getDouble("cost_price");
                txt_qty.grabFocus();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_stock_iteamidActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_delete1;
    private javax.swing.JButton btn_payinvoice;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> stock_iteamid;
    private javax.swing.JTextField txt_available;
    private javax.swing.JTextField txt_balance;
    private javax.swing.JTextField txt_cusid;
    private javax.swing.JTextField txt_custype;
    private javax.swing.JTextField txt_discount;
    private javax.swing.JTextField txt_invoiceid;
    private javax.swing.JTextField txt_itemname;
    private javax.swing.JTextField txt_netbalance;
    private javax.swing.JTextField txt_payment;
    private javax.swing.JPanel txt_productcode;
    private javax.swing.JPanel txt_productcode1;
    private javax.swing.JTextField txt_qty;
    private javax.swing.JTextField txt_subtotal;
    private javax.swing.JTextField txt_total;
    private javax.swing.JTextField txt_unitprice;
    // End of variables declaration//GEN-END:variables

    private void genetateInvoiceID() {
        try {
            ResultSet rs = DB.search("select count(invoice_id) as x from invoice");
            if (rs.next()) {
                String countString = rs.getString("x");
                int count = Integer.parseInt(countString);
                ++count;
                txt_invoiceid.setText("INVOICE" + count);
                txt_invoiceid.setEnabled(false);
            }
            txt_invoiceid.grabFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clear() {

        txt_itemname.setText(null);
        txt_available.setText(null);
        txt_qty.setText(null);
        txt_unitprice.setText(null);
        txt_total.setText(null);

    }

    private InvoiceItemRow checkRowRepeating(String text) {

        InvoiceItemRow itemRow = null;
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        for (int row = 0; row < jTable1.getRowCount(); row++) {
            if (text.trim().equals(jTable1.getValueAt(row, 0).toString())) {
                itemRow = new InvoiceItemRow();
                double qty = Double.parseDouble(jTable1.getValueAt(row, 3).toString());
                double total = Double.parseDouble(jTable1.getValueAt(row, 4).toString());
                itemRow.setQty(qty);
                itemRow.setTotal(total);
                dtm.removeRow(row);
                break;

            }
        }
        return itemRow;
    }

    private void calculateTotal() {
        double tot = 0;
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        for (int row = 0; row < dtm.getRowCount(); row++) {
            tot += Double.parseDouble(dtm.getValueAt(row, 4).toString());
        }
        txt_subtotal.setText("" + tot);

    }

    private void idSearch() {
        try {
            ResultSet rs = DB.search("SELECT * FROM `stock` where status = 1");
            Vector v = new Vector();

            while (rs.next()) {
                String data = rs.getString("item_id");
                v.add(data);
            }

            stock_iteamid.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void createNewInvoice() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        txt_itemname.setText(null);
        txt_available.setText(null);
        txt_qty.setText(null);
        txt_unitprice.setText(null);
        txt_total.setText(null);
        txt_subtotal.setText(null);
        txt_discount.setText(null);
        txt_netbalance.setText(null);
        txt_payment.setText(null);
        txt_balance.setText(null);
        genetateInvoiceID();

    }

    public void posreport() {
        try {

            JasperDesign jasdi = JRXmlLoader.load(SystemVariableList.REPORT_BASE__URL+"POSReport.jrxml");
            String sql = "SELECT * FROM `invoice_item` where `invoice_id` like '" + txt_invoiceid.getText().trim() + "'";
            JRDesignQuery newQuery = new JRDesignQuery();
            newQuery.setText(sql);

            jasdi.setQuery(newQuery);
            /////////////
            HashMap<String, Object> para = new HashMap<>();
            para.put("s_total", "RS. " + txt_subtotal.getText());
            para.put("discount", txt_discount.getText() + "%");
            para.put("n_total", "RS. " + txt_netbalance.getText());
            para.put("payment", "RS. " + txt_payment.getText());
            para.put("balance", "RS. " + txt_balance.getText());
            para.put("invoice_id", txt_invoiceid.getText());

            JasperReport js = JasperCompileManager.compileReport(jasdi);
            JasperPrint jp = JasperFillManager.fillReport(js, para, DB.getDBConnection());
            JasperExportManager.exportReportToPdfFile(jp, SystemVariableList.PDF_BASE_URL+"POS\\POS.pdf");
            JasperViewer.viewReport(jp, false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, String.valueOf(e), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
